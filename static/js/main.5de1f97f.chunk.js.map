{"version":3,"sources":["components/NavBar/NavBar.tsx","components/NavIcons/NavIcons.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","App.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/CategoriesLink/CategoriesLink.tsx","components/ShopByCategories/ShopByCategories.tsx","components/Loader/Loader.tsx","context/CartStorageContext.tsx","components/AddToCartButton/AddToCartButton.tsx","context/FavoriteStorageContext.tsx","components/FavoriteButton/FavoriteButton.tsx","components/CardButtons/CardButtons.tsx","components/ProductItem/ProductItem.tsx","components/ProductSlider/ProductSlider.tsx","components/InfiniteSlider/InfiniteSlider.tsx","utils/fetchData.ts","helpers/enums.tsx","components/MobileSwiper/MobileSwiper.tsx","pages/HomePage/HomePage.tsx","helpers/pagesMethods.tsx","components/PagePath/PagePath.tsx","helpers/searchHelpers.tsx","components/Dropdown/Dropdown.tsx","components/SortBySelect/SortBySelect.tsx","helpers/usePagination.tsx","components/LoadMore/LoadMore.tsx","components/ProductsList/ProductsList.tsx","components/PaginationBlock/PaginationBlock.tsx","components/PaginationPage/PaginationPage.tsx","components/NoSearchResult/NoSearchResult.tsx","components/ItemsOnPageSelect/ItemsOnPageSelect.tsx","pages/PhonesPage/PhonesPage.tsx","components/NoResult/NoResult.tsx","pages/TabletsPage/TabletsPage.tsx","pages/AccessoriesPage/AccessoriesPage.tsx","components/ProductDetailsInfo/ProductDetailsInfo.tsx","components/ProductImagesSlider/ProductImagesSlider.tsx","pages/ItemCardPage/ItemCardPage.tsx","index.tsx"],"names":["NavBar","_jsx","className","role","children","_jsxs","NavLink","to","src","alt","_ref","isActive","classNames","_ref2","_ref3","_ref4","NavIcons","_Fragment","Header","Footer","href","App","Outlet","NotFoundPage","Link","CategoriesLink","url","imageUrl","title","amount","concat","ShopByCategories","phonesAmount","tabletsAmount","accessoriesAmount","Loader","CartStorageContext","createContext","cartItems","setCartItems","handleAddToCart","getTotalPrice","getTotalCartItems","AddToCartButton","id","product","name","price","_useContext","useContext","_useState","useState","find","item","_unused","_useState2","_slicedToArray","isInCart","setIsInCart","useEffect","type","onClick","quantity","button__selected","FavoriteStorageContext","favorites","setFavorites","handleAddToFavorite","handleRemoveFromFavorite","FavoriteButton","itemId","fullPrice","category","image","screen","capacity","ram","isFavorite","setIsFavorite","CardButtons","ProductItem","isSlider","isProductsList","slider__card","ProductsSlider","products","currentSlider","useRef","_useState3","_useState4","isPrevDisabled","setIsPrevDisabled","_useState5","_useState6","isNextDisabled","setIsNextDisabled","getScrollValue","_card$getBoundingClie","card","document","querySelector","windowWidth","window","innerWidth","cardWidth","getBoundingClientRect","width","gap","Math","round","_useState7","_useState8","swipe","setSwipe","_useState9","_useState10","isSwiped","setIsSwiped","current","scrollWidth","clientWidth","length","carousel","scrollBy","left","behavior","disabled","style","backgroundImage","onScroll","event","_event$currentTarget","currentTarget","scrollLeft","maxWidth","ref","onTouchStart","touch","touches","clientX","onTouchMove","changedTouches","onTouchEnd","handleTouchEnd","map","SamplePrevArrow","currentSlide","slideCount","props","_objectWithoutProperties","_excluded","_objectSpread","SampleNextArrow","_ref2$slideCount","_excluded2","InfiniteSlider","carouselImagesUrl","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","autoplay","autoplaySpeed","responsive","breakpoint","arrows","Slider","NEW_PRODUCTS_URL","PRODUCT_DETAILS","getProducts","_getProducts","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","fetch","then","response","json","stop","getProductDetails","_x","_getProductDetails","_callee2","productId","_context2","SortBy","PreviousPage","MobileSwiper","Swiper","pagination","dynamicBullets","modules","Pagination","SwiperSlide","HomePage","setProducts","navigate","useNavigate","getHotPricesProducts","filter","sort","productOne","productTwo","handleLoading","productsFromServer","sent","t0","replace","year","handleSort","array","sortValue","Alphabetic","_toConsumableArray","firstItem","secondItem","localeCompare","Cheapest","Newest","handleCurrentItemsList","previousPageValue","pageValue","firstProductIdx","lastProductIdx","_product","idx","getCurrentProductList","query","previousPage","page","setPaginationTotal","currentList","sortedPhones","searchResult","arrayToFilter","search","toLowerCase","includes","handleSearch","getSuggestProducts","suggestProducts","_x2","_x3","getLinkToProduct","nameId","color","getMemoryCapacity","number","parseFloat","PagePath","productName","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","DropdownSelect","selectedValue","options","onSelect","defaultOption","handleCurrentValue","optionValue","_optionValue","Number","isNaN","isShown","setIsShown","opened","tabIndex","prevState","onBlur","setTimeout","show","_ref5","handleClick","SortBySelect","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","values","isSortBy","DOTS","range","start","end","from","_","usePagination","totalCount","pageSize","currentPage","_ref$siblingCount","siblingCount","useMemo","totalPageCount","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","LoadMore","productsList","currentProductsList","setCurrentProductsList","total","sortedProducts","paginationRange","lastPage","currentItemsList","setCurrentArray","firstItemIndex","lastItemIndex","arrayToAdd","index","prevArray","handleLoadMore","ProductsList","PaginationBlock","perPage","onPageChange","handlePageClick","pageNumber","random","PaginationPage","NoSearchResult","scrollTo","top","ItemsOnPageSelect","PhonesPage","phonesList","setPhonesList","isLoading","setIsLoading","isInitialized","setIsInitialized","paginationTotal","location","useLocation","currentPhonesList","setCurrentPhonesList","phones","NoResults","TabletsPage","tabletsList","setTabletsList","currentTabletsList","setCurrentTabletsList","handeLoading","tablets","AccessoriesPage","accessoriesList","setAccessoriesList","ProductDetailsInfo","colors","currentColor","priceDiscount","priceRegular","resolution","processor","capacities","currentCapacity","images","getColor","backgroundColor","ProductImagesSlider","isSelected","setIsSelected","ItemCardPage","isError","setIsError","suggestItems","setSuggestItems","currentProduct","setCurrentProduct","_useParams$productId","useParams","path","pathname","slice","indexOf","suggest","colorsAvailable","capacityAvailable","namespaceId","description","section","text","camera","zoom","cell","join","ReactDOM","render","Router","Routes","Route","element","Navigate","getElementById"],"mappings":"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","file":"static/js/main.5de1f97f.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './NavBar.scss';\n\nexport const NavBar: FC = () => {\n  return (\n    <nav\n      className=\"navbar\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar__container\">\n        <NavLink to=\"/\">\n          <img\n            src=\"img/LOGO.svg\"\n            alt=\"Logo\"\n            className=\"header__logo\"\n          />\n        </NavLink>\n\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/phones\"\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n        >\n          Phones\n        </NavLink>\n\n        <NavLink\n          to=\"/tablets\"\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n        >\n          Tablets\n        </NavLink>\n\n        <NavLink\n          to=\"/accessories\"\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n        >\n          Accessories\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavIcons: FC = () => {\n  return (\n    <>\n      <NavLink to=\"/favourites\">\n        <img src=\"img/Icons/Favourites.svg\" alt=\"Favourites\" />\n      </NavLink>\n\n      <NavLink to=\"/cart\">\n        <img src=\"img/Icons/Cart.svg\" alt=\"Cart\" />\n      </NavLink>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { NavBar } from '../NavBar/NavBar';\nimport { NavIcons } from '../NavIcons/NavIcons';\n\nimport './Header.scss';\n\nexport const Header: FC = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"nav-container\">\n        <NavBar />\n      </div>\n\n      <div className=\"icons-container\">\n        <NavIcons />\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\n\nimport './Footer.scss';\n\nexport const Footer: FC = () => {\n  return (\n    <div className=\"footer\">\n      <img src=\"img/LOGO.svg\" alt=\"Logo\" />\n\n      <div className=\"footer__container\">\n        <a\n          href=\"https://github.com/deandre25/react_phone-catalog\"\n          className=\"footer-item\"\n        >\n          GitHub\n        </a>\n\n        <a\n          href=\"/\"\n          className=\"footer-item\"\n        >\n          Contacts\n        </a>\n\n        <a\n          href=\"/\"\n          className=\"footer-item\"\n        >\n          Rights\n        </a>\n      </div>\n\n      <div className=\"footer-back\">\n        <p className=\"footer-back__title\">Back to top</p>\n      </div>\n    </div>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Header } from './components/Header/Header';\nimport { Footer } from './components/Footer/Footer';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <>\n      <Header />\n\n      <main className=\"main\">\n        <Outlet />\n      </main>\n\n      <Footer />\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './NotFoundPage.scss';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <div\n      className=\"\n        main__products-page\n        main__products-page--width\n        products-page\n        not-found-page\n      \"\n    >\n      <h1 className=\"not-found-page__ title page-title\">Page not found</h1>\n\n      <Link to=\"/\" className=\"not-found-page__link\">\n        Home Page\n      </Link>\n\n      <div className=\"no-results__image-container\">\n        <img\n          src=\"img/pageNotFound.jpg\"\n          alt=\"Not found page\"\n          className=\"no-results__image\"\n        />\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './CategoriesLink.scss';\n\ntype Props = {\n  url: string;\n  imageUrl: string;\n  title: string;\n  amount: number;\n};\n\nexport const CategoriesLink: FC<Props> = ({\n  url,\n  imageUrl,\n  title,\n  amount,\n}) => {\n  return (\n    <Link\n      to={url}\n      className=\"categories__link category\"\n    >\n      <div className=\"category-image-container\">\n        <img\n          src={imageUrl}\n          alt={title}\n          className=\"category__image\"\n        />\n      </div>\n\n      <p className=\"category__title\">{title}</p>\n      <p className=\"category__items-amount\">{`${amount} models`}</p>\n    </Link>\n  );\n};\n","import { FC } from 'react';\n\nimport { CategoriesLink } from '../CategoriesLink/CategoriesLink';\n\nimport './ShopByCategories.scss';\n\ntype Props = {\n  phonesAmount: number;\n  tabletsAmount: number;\n  accessoriesAmount: number;\n};\n\nexport const ShopByCategories: FC<Props> = ({\n  phonesAmount,\n  tabletsAmount,\n  accessoriesAmount,\n}) => {\n  return (\n    <div className=\"categories home-page__section\">\n      <h2 className=\"categories__title\">Shop by category</h2>\n\n      <div\n        className=\"categories__links\"\n        data-cy=\"categoryLinksContainer\"\n      >\n        <CategoriesLink\n          url=\"/phones\"\n          imageUrl=\"_new/img/category-phones.png\"\n          title=\"Mobile phones\"\n          amount={phonesAmount}\n        />\n\n        <CategoriesLink\n          url=\"/tablets\"\n          imageUrl=\"_new/img/category-tablets.png\"\n          title=\"Tablets\"\n          amount={tabletsAmount}\n        />\n\n        <CategoriesLink\n          url=\"/accessories\"\n          imageUrl=\"_new/img/category-accessories.png\"\n          title=\"Accessories\"\n          amount={accessoriesAmount}\n        />\n      </div>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { createContext } from 'react';\nimport { CartProduct } from '../types/CartProduct';\n\ntype ContextType = {\n  cartItems: CartProduct[];\n  setCartItems: ((valueToSave: CartProduct[]) => void) | null;\n  handleAddToCart: ((addedValue: CartProduct) => void) | null;\n  getTotalPrice: () => number;\n  getTotalCartItems: (() => number) | null;\n};\n\nexport const CartStorageContext = createContext<ContextType>({\n  cartItems: [],\n  setCartItems: null,\n  handleAddToCart: null,\n  getTotalPrice: () => 0,\n  getTotalCartItems: () => 0,\n});\n","import {\n  FC, useContext, useEffect, useState,\n} from 'react';\nimport classNames from 'classnames';\n\nimport { CartStorageContext } from '../../context/CartStorageContext';\nimport { CartProduct } from '../../types/CartProduct';\n\nimport './AddToCartButton.scss';\n\ntype Props = {\n  id: string;\n  product: string;\n  name: string;\n  price: number;\n  imageUrl: string;\n};\n\nexport const AddToCartButton: FC<Props> = ({\n  id,\n  product,\n  name,\n  price,\n  imageUrl,\n}) => {\n  const { cartItems, handleAddToCart } = useContext(CartStorageContext);\n\n  const [isInCart, setIsInCart] = useState(() => {\n    try {\n      return cartItems.find((item: CartProduct) => item.id === id) || false;\n    } catch {\n      return false;\n    }\n  });\n\n  const handleAddItem = () => {\n    if (isInCart || !handleAddToCart) {\n      return;\n    }\n\n    const newItem = {\n      id,\n      quantity: 1,\n      product,\n      name,\n      price,\n      imageUrl,\n    };\n\n    handleAddToCart(newItem);\n    setIsInCart(true);\n  };\n\n  useEffect(() => {\n    setIsInCart(cartItems.find((item: CartProduct) => item.id === id) || false);\n  }, [cartItems]);\n\n  return (\n    <button\n      type=\"button\"\n      onClick={handleAddItem}\n      className={classNames(\n        'button__buy',\n        { 'button__add-to-cart': !isInCart },\n        { button__selected: isInCart },\n      )}\n    >\n      {isInCart ? 'Remove from cart' : 'Add to cart'}\n    </button>\n  );\n};\n","import { createContext } from 'react';\nimport { FavoriteItem } from '../types/FavoriteItem';\n\ntype FavoriteType = {\n  favorites: FavoriteItem[];\n  setFavorites: ((value: FavoriteItem[]) => void) | null;\n  handleAddToFavorite: ((value: FavoriteItem) => void) | null;\n  handleRemoveFromFavorite: ((itemId: string) => void) | null;\n};\n\nexport const FavoriteStorageContext = createContext<FavoriteType>({\n  favorites: [],\n  setFavorites: null,\n  handleAddToFavorite: null,\n  handleRemoveFromFavorite: null,\n});\n","import {\n  FC, useContext, useEffect, useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { FavoriteItem } from '../../types/FavoriteItem';\nimport { FavoriteStorageContext } from '../../context/FavoriteStorageContext';\n\nimport './FavoriteButton.scss';\n\nexport const FavoriteButton: FC<FavoriteItem> = ({\n  itemId,\n  fullPrice,\n  name,\n  category,\n  image,\n  price,\n  screen,\n  capacity,\n  ram,\n}) => {\n  const {\n    favorites,\n    handleAddToFavorite,\n    handleRemoveFromFavorite,\n  } = useContext(FavoriteStorageContext);\n\n  const [isFavorite, setIsFavorite] = useState(() => {\n    try {\n      return favorites\n        .find((item: FavoriteItem) => item.itemId === itemId) || false;\n    } catch {\n      return false;\n    }\n  });\n\n  const handleFavorite = () => {\n    if (!handleAddToFavorite || !handleRemoveFromFavorite) {\n      return;\n    }\n\n    if (isFavorite) {\n      handleRemoveFromFavorite(itemId);\n      setIsFavorite(false);\n    } else {\n      const newItem = {\n        itemId,\n        fullPrice,\n        name,\n        category,\n        image,\n        price,\n        screen,\n        capacity,\n        ram,\n      };\n\n      handleAddToFavorite(newItem);\n      setIsFavorite(true);\n    }\n  };\n\n  useEffect(() => {\n    setIsFavorite(\n      favorites.find((item: FavoriteItem) => item.itemId === itemId) || false,\n    );\n  }, [favorites]);\n\n  return (\n    <button\n      type=\"button\"\n      data-cy=\"addToFavorite\"\n      className={classNames(\n        'button__add-to-favorite',\n        { 'button__add-to-fav--selected': isFavorite },\n      )}\n      aria-label=\"add-to-favorite\"\n      onClick={handleFavorite}\n    />\n  );\n};\n","import { FC } from 'react';\n\nimport { AddToCartButton } from '../AddToCartButton/AddToCartButton';\nimport { FavoriteButton } from '../FavoriteButton/FavoriteButton';\n\nimport './CardButtons.scss';\n\ntype Props = {\n  id: string;\n  product: string;\n  name: string;\n  price: number;\n  imageUrl: string;\n  fullPrice: number;\n  screen: string;\n  capacity: string;\n  ram: string;\n};\n\nexport const CardButtons: FC<Props> = ({\n  id,\n  product,\n  name,\n  price,\n  imageUrl,\n  fullPrice,\n  screen,\n  capacity,\n  ram,\n}) => {\n  return (\n    <div className=\"card__buttons button\">\n      <AddToCartButton\n        id={id}\n        product={product}\n        name={name}\n        price={price}\n        imageUrl={imageUrl}\n      />\n\n      <FavoriteButton\n        itemId={id}\n        fullPrice={fullPrice}\n        name={name}\n        category={product}\n        image={imageUrl}\n        price={price}\n        screen={screen}\n        capacity={capacity}\n        ram={ram}\n      />\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { CatalogProduct } from '../../types/CatalogProduct';\n\nimport './ProductItem.scss';\nimport { CardButtons } from '../CardButtons/CardButtons';\n\ntype Props = {\n  product: CatalogProduct;\n  isSlider: boolean;\n  isProductsList: boolean,\n};\n\nexport const ProductItem: FC<Props> = ({\n  product,\n  isSlider,\n  isProductsList,\n}) => {\n  const {\n    itemId,\n    fullPrice,\n    name,\n    category,\n    image,\n    price,\n    screen,\n    capacity,\n    ram,\n  } = product;\n\n  return (\n    <div\n      className={classNames(\n        'card',\n        { slider__card: isSlider },\n        { 'products-list__card': isProductsList },\n      )}\n    >\n      <Link\n        to={`/${category}/${itemId}`}\n        className=\"card__link\"\n      >\n        <div className=\"image-container\">\n          <img\n            src={`./_new/${image}`}\n            alt={name}\n            className=\"card__image\"\n          />\n        </div>\n        <div className=\"card-name-container\">\n          <p className=\"card__name\">\n            {name}\n          </p>\n        </div>\n        <div className=\"card__prices prices\">\n          <p className=\"prices__current-price\">\n            {`$${price}`}\n          </p>\n\n          <p className=\"prices__full-price\">\n            {`$${fullPrice}`}\n          </p>\n        </div>\n        <div className=\"card__info product-info\">\n          <div className=\"product-info__items\">\n            <p className=\"product-info__item\">Screen</p>\n            <p className=\"product-info__item\">Capacity</p>\n            <p className=\"product-info__item\">RAM</p>\n          </div>\n          <div className=\"product-info__values\">\n            <p className=\"product-info__value\">\n              {`${screen}`}\n            </p>\n            <p className=\"product-info__value\">\n              {capacity}\n            </p>\n            <p className=\"product-info__value\">\n              {ram}\n            </p>\n          </div>\n        </div>\n      </Link>\n\n      <CardButtons\n        id={itemId}\n        product={category}\n        name={name}\n        price={price}\n        imageUrl={image}\n        fullPrice={fullPrice}\n        screen={screen}\n        capacity={capacity}\n        ram={ram}\n      />\n    </div>\n  );\n};\n","import {\n  FC,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { CatalogProduct } from '../../types/CatalogProduct';\nimport { Loader } from '../Loader';\nimport { ProductItem } from '../ProductItem/ProductItem';\n\nimport './ProductSlider.scss';\n\ntype Props = {\n  title: string;\n  products: CatalogProduct[];\n};\n\nconst gap = 16;\n\nexport const ProductsSlider: FC<Props> = ({\n  title,\n  products,\n}) => {\n  const currentSlider = useRef<HTMLDivElement>(null);\n\n  const [isSlider] = useState(true);\n\n  const [isPrevDisabled, setIsPrevDisabled] = useState(true);\n  const [isNextDisabled, setIsNextDisabled] = useState(false);\n\n  const getScrollValue = () => {\n    const card = document.querySelector('.card');\n    const windowWidth = window.innerWidth;\n\n    const cardWidth = (card?.getBoundingClientRect().width ?? 0);\n\n    if (windowWidth >= 1161) {\n      return cardWidth * 4 + gap * 4;\n    }\n\n    if (windowWidth >= 870 && windowWidth <= 1160) {\n      return Math.round((cardWidth * 3 + gap * 3) * 10) / 10;\n    }\n\n    if (windowWidth <= 869 && windowWidth > 580) {\n      return cardWidth * 2 + gap * 2;\n    }\n\n    return 0;\n  };\n\n  const handleShowPrevious = (carousel: HTMLDivElement | null) => {\n    if (!carousel) {\n      return;\n    }\n\n    carousel.scrollBy({\n      left: getScrollValue() * -1,\n      behavior: 'smooth',\n    });\n  };\n\n  const handleShowNext = (carousel: HTMLDivElement | null) => {\n    if (!carousel) {\n      return;\n    }\n\n    carousel.scrollBy({\n      left: getScrollValue(),\n      behavior: 'smooth',\n    });\n  };\n\n  const handleSliderScroll = (\n    event: React.UIEvent<HTMLDivElement, UIEvent>,\n  ) => {\n    const {\n      scrollLeft,\n      scrollWidth,\n      clientWidth,\n    } = event.currentTarget;\n\n    const maxWidth = (scrollWidth - clientWidth);\n\n    switch (Math.round(scrollLeft)) {\n      case maxWidth:\n        setIsNextDisabled(true);\n        break;\n\n      case 0:\n        setIsPrevDisabled(true);\n        break;\n\n      default:\n        setIsPrevDisabled(false);\n        setIsNextDisabled(false);\n        break;\n    }\n  };\n\n  const [swipe, setSwipe] = useState(0);\n  const [isSwiped, setIsSwiped] = useState(false);\n\n  const handleTouchStart = (event: React.TouchEvent<HTMLDivElement>) => {\n    const touch = event.touches[0];\n\n    setSwipe(touch.clientX);\n    setIsSwiped(false);\n  };\n\n  const handleTouchMove = (\n    event: React.TouchEvent<HTMLDivElement>,\n  ) => {\n    if (event.changedTouches && event.changedTouches.length) {\n      setIsSwiped(true);\n    }\n  };\n\n  const handleTouchEnd = (\n    event: React.TouchEvent<HTMLDivElement>,\n    carousel: HTMLDivElement | null,\n  ) => {\n    if (!carousel || !isSwiped) {\n      return;\n    }\n\n    const touch = event.changedTouches[0];\n\n    if (touch.clientX > swipe) {\n      carousel.scrollBy({\n        left: getScrollValue() * -1,\n        behavior: 'smooth',\n      });\n    } else {\n      carousel.scrollBy({\n        left: getScrollValue(),\n        behavior: 'smooth',\n      });\n    }\n\n    setIsSwiped(false);\n    setSwipe(0);\n  };\n\n  useEffect(() => {\n    if (currentSlider.current) {\n      setIsNextDisabled(\n        currentSlider.current.scrollWidth === currentSlider.current.clientWidth,\n      );\n    }\n  }, [products.length]);\n\n  return (\n    <div className=\"slider home-page__slider\">\n      <div className=\"slider__header-block\">\n        <h2 className=\"slider__title\">{title}</h2>\n\n        <div className=\"slider__buttons-container\">\n          <button\n            type=\"button\"\n            name=\"Prev\"\n            aria-label=\"buttonPrev\"\n            onClick={() => handleShowPrevious(currentSlider.current)}\n            className=\"pagination-button pagination-button--prev slider__button\"\n            disabled={isPrevDisabled}\n          />\n\n          <button\n            type=\"button\"\n            name=\"Next\"\n            aria-label=\"buttonNext\"\n            onClick={() => handleShowNext(currentSlider.current)}\n            className=\"pagination-button slider__button slider__button--next\"\n            disabled={isNextDisabled}\n            style={{ backgroundImage: 'url(../../assets/svg/ArrowRight.svg)' }}\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"slider__cards-block\"\n        onScroll={handleSliderScroll}\n        ref={currentSlider}\n        data-cy=\"cardsContainer\"\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={(event) => handleTouchEnd(event, currentSlider.current)}\n      >\n        {!products.length\n          ? (\n            <Loader />\n          ) : (\n            <>\n              {products.map(product => (\n                <ProductItem\n                  product={product}\n                  key={product.id}\n                  isSlider={isSlider}\n                  isProductsList={false}\n                />\n              ))}\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\n// import Slider from 'react-slick';\nimport Slider, { CustomArrowProps } from 'react-slick';\nimport classNames from 'classnames';\n\nimport './InfiniteSlider.scss';\n\nconst SamplePrevArrow = ({\n  currentSlide, slideCount, onClick, ...props\n}: CustomArrowProps) => {\n  return (\n    <button\n      {...props}\n      onClick={onClick}\n      type=\"button\"\n      className={classNames(\n        'custom-slider-button',\n        'custom-slider-button--prev',\n        { 'slick-disabled': currentSlide === 0 },\n      )}\n      aria-hidden=\"true\"\n      aria-disabled={currentSlide === 0}\n    />\n  );\n};\n\nconst SampleNextArrow = ({\n  currentSlide, slideCount = 0, onClick, ...props\n}: CustomArrowProps) => {\n  return (\n    <button\n      {...props}\n      onClick={onClick}\n      type=\"button\"\n      className={classNames(\n        'custom-slider-button',\n        'custom-slider-button--next',\n        { 'slick-disabled': currentSlide === slideCount - 1 },\n      )}\n      aria-hidden=\"true\"\n      aria-disabled={currentSlide === slideCount - 1}\n    />\n  );\n};\n\ntype Props = {\n  carouselImagesUrl: string[];\n};\n\nexport const InfiniteSlider: FC<Props> = ({ carouselImagesUrl }) => {\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    nextArrow: <SampleNextArrow />,\n    prevArrow: <SamplePrevArrow />,\n    autoplay: true,\n    autoplaySpeed: 5000,\n    responsive: [\n      {\n        breakpoint: 870,\n        settings: {\n          arrows: false,\n        },\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Slider {...settings}>\n        {carouselImagesUrl.map(imageUrl => (\n          <img key={imageUrl} src={imageUrl} alt=\"Images banner\" />\n        ))}\n      </Slider>\n    </div>\n  );\n};\n","import { CatalogProduct } from '../types/CatalogProduct';\n\n/* eslint-disable max-len */\nconst NEW_PRODUCTS_URL = 'https://mate-academy.github.io/react_phone-catalog/_new/products.json';\nconst PRODUCT_DETAILS = 'https://mate-academy.github.io/react_phone-catalog/_new/products/';\n\nexport async function getProducts(): Promise<CatalogProduct[]> {\n  return fetch(NEW_PRODUCTS_URL)\n    .then(response => response.json());\n}\n\nexport async function getProductDetails(productId: string) {\n  return fetch(`${PRODUCT_DETAILS}${productId}.json`)\n    .then(response => response.json());\n}\n","export enum SortBy {\n  Newest = 'age',\n  Cheapest = 'price',\n  Alphabetic = 'name',\n}\n\nexport enum PreviousPage {\n  Four = '4',\n  Eight = '8',\n  Sixteen = '16',\n  All = 'all',\n}\n","import { FC, useRef, useState } from 'react';\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Pagination } from 'swiper';\nimport 'swiper/swiper.scss';\nimport 'swiper/modules/pagination/pagination.scss';\n\nimport './MobileSwiper.scss';\nimport { CatalogProduct } from '../../types/CatalogProduct';\nimport { ProductItem } from '../ProductItem/ProductItem';\n\ntype Props = {\n  title: string;\n  products: CatalogProduct[];\n};\n\nexport const MobileSwiper: FC<Props> = ({ title, products }) => {\n  const currentSlider = useRef(null);\n\n  const [isSlider] = useState(true);\n\n  return (\n    <div className=\"home-page__mobile-swiper mobile-swiper\">\n      <h2 className=\"slider__title\">{title}</h2>\n\n      <Swiper\n        pagination={{\n          dynamicBullets: true,\n        }}\n        modules={[Pagination]}\n        className=\"mySwiper\"\n        ref={currentSlider}\n      >\n        {products.map(product => (\n          <SwiperSlide key={product.id}>\n            <ProductItem\n              product={product}\n              isSlider={isSlider}\n              isProductsList={false}\n            />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </div>\n  );\n};\n","import {\n  FC,\n  useEffect,\n  useState,\n} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { ShopByCategories } from '../../components/ShopByCategories';\nimport { ProductsSlider } from '../../components/ProductSlider/ProductSlider';\nimport { InfiniteSlider } from '../../components/InfiniteSlider/InfiniteSlider';\nimport { CatalogProduct } from '../../types/CatalogProduct';\nimport { getProducts } from '../../utils/fetchData';\n\nimport './HomePage.scss';\nimport { MobileSwiper } from '../../components/MobileSwiper/MobileSwiper';\n\nconst carouselImagesUrl = [\n  './_new/img/banner-phones.png',\n  './_new/img/banner-tablets.png',\n  './_new/img/banner-accessories.png',\n];\n\nexport const HomePage: FC = () => {\n  const [products, setProducts] = useState<CatalogProduct[]>([]);\n\n  const navigate = useNavigate();\n\n  const getHotPricesProducts = () => {\n    const hotPriceProducts = products\n      .filter(product => product.price > 0)\n      .sort((productOne, productTwo) => {\n        const productOnePrice = productOne.fullPrice - productOne.price;\n        const productTwoPrice = productTwo.fullPrice - productTwo.price;\n\n        return productOnePrice - productTwoPrice;\n      });\n\n    return hotPriceProducts;\n  };\n\n  const getBrandNewModels = () => {\n    const brandNewModels = products\n      .filter(product => product.price > 0)\n      .sort((productOne, productTwo) => {\n        return productTwo.year - productOne.year;\n      });\n\n    return brandNewModels;\n  };\n\n  const phonesAmount = products.filter(\n    (product: CatalogProduct) => product.category === 'phones',\n  ).length;\n\n  const tabletsAmount = products.filter(\n    (product: CatalogProduct) => product.category === 'tablet',\n  ).length;\n\n  const accessoriesAmount = products.filter(\n    (product: CatalogProduct) => product.category === 'accessory',\n  ).length;\n\n  const handleLoading = async () => {\n    try {\n      const productsFromServer = await getProducts();\n\n      setProducts(productsFromServer);\n    } catch (error) {\n      navigate('/notfound', { replace: true });\n    }\n  };\n\n  useEffect(() => {\n    handleLoading();\n  }, []);\n\n  return (\n    <div className=\"home-page main__page\">\n      <InfiniteSlider carouselImagesUrl={carouselImagesUrl} />\n\n      <ProductsSlider title=\"Hot prices\" products={getHotPricesProducts()} />\n\n      <MobileSwiper\n        title=\"Hot prices\"\n        products={getHotPricesProducts()}\n      />\n\n      <ShopByCategories\n        phonesAmount={phonesAmount}\n        tabletsAmount={tabletsAmount}\n        accessoriesAmount={accessoriesAmount}\n      />\n\n      <ProductsSlider title=\"Brand new models\" products={getBrandNewModels()} />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { CatalogProduct } from '../types/CatalogProduct';\nimport { SortBy } from './enums';\nimport { getProducts } from '../utils/fetchData';\n\nexport const handleSort = (array: CatalogProduct[], sortValue: string) => {\n  switch (sortValue) {\n    case SortBy.Alphabetic:\n      return [...array].sort((firstItem, secondItem) => firstItem.name\n        .localeCompare(secondItem.name));\n\n    case SortBy.Cheapest:\n      return [...array].sort((firstItem, secondItem) => firstItem\n        .fullPrice - secondItem.fullPrice);\n\n    case SortBy.Newest:\n    default:\n      return [...array].sort((firstItem, secondItem) => firstItem\n        .year - secondItem.year);\n  }\n};\n\nexport const handleSearch = (\n  arrayToFilter: CatalogProduct[],\n  query: string,\n) => {\n  const search = query.toLowerCase();\n\n  const newArray = arrayToFilter\n    .filter((item: CatalogProduct) => item.name.toLowerCase().includes(search));\n\n  return newArray;\n};\n\nexport const handleCurrentItemsList = (\n  array: CatalogProduct[] | [],\n  previousPageValue: string,\n  pageValue: string,\n): CatalogProduct[] => {\n  if (!array.length) {\n    return [];\n  }\n\n  let firstProductIdx: number;\n  let lastProductIdx: number;\n\n  if (previousPageValue === 'all') {\n    firstProductIdx = 0;\n    lastProductIdx = array.length;\n  } else {\n    firstProductIdx = (+pageValue - 1) * +previousPageValue;\n    lastProductIdx = (firstProductIdx + +previousPageValue - 1) < array.length\n      ? (firstProductIdx + +previousPageValue - 1) : array.length;\n  }\n\n  const currentList = array.filter((_product, idx) => (\n    idx >= firstProductIdx && idx <= lastProductIdx\n  ));\n\n  return currentList;\n};\n\nexport const getCurrentProductList = (\n  products: CatalogProduct[],\n  sort: string,\n  query: string,\n  previousPage: string,\n  page: string,\n  setPaginationTotal: React.Dispatch<React.SetStateAction<number>>,\n) => {\n  let currentList;\n  const sortedPhones = handleSort(products, sort);\n\n  if (query) {\n    const searchResult = handleSearch(sortedPhones, query);\n\n    setPaginationTotal(searchResult.length);\n    currentList = handleCurrentItemsList(\n      searchResult,\n      previousPage,\n      page,\n    );\n  } else {\n    setPaginationTotal(products.length);\n    currentList = handleCurrentItemsList(\n      sortedPhones,\n      previousPage,\n      page,\n    );\n  }\n\n  return currentList;\n};\n\nexport const handleLoadMore = (\n  array: CatalogProduct[],\n  previousPageValue: string,\n  currentItemsList: CatalogProduct[],\n  setCurrentArray: React.Dispatch<React.SetStateAction<CatalogProduct[]>>,\n) => {\n  const firstItemIndex = currentItemsList.length - 1;\n\n  const lastItemIndex\n    = (firstItemIndex + +previousPageValue) < array.length\n      ? (firstItemIndex + +previousPageValue)\n      : array.length;\n\n  const arrayToAdd = array.filter((_product, index) => (\n    index >= firstItemIndex + 1 && index <= lastItemIndex\n  ));\n\n  setCurrentArray(prevArray => [...prevArray, ...arrayToAdd]);\n};\n\nexport const getSuggestProducts = async (\n  screen: string,\n  capacity: string,\n  itemId: string,\n) => {\n  try {\n    const products = await getProducts();\n\n    const suggestProducts = products.filter((product: CatalogProduct) => {\n      if (product.itemId !== itemId\n        && (product.screen === screen || product.capacity === capacity)) {\n        return product;\n      }\n\n      return null;\n    });\n\n    return suggestProducts;\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const getLinkToProduct = (\n  category: string,\n  nameId: string,\n  capacity: string,\n  color: string,\n) => {\n  return `/${category}/${nameId}-${capacity.toLowerCase()}-${color}`;\n};\n\nexport const getMemoryCapacity = (capacity: string) => {\n  const number = parseFloat(capacity);\n\n  return `${number}${capacity.replace(`${number}`, '')}`;\n};\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './PagePath.scss';\n\ntype Props = {\n  url: string;\n  title: string;\n  // eslint-disable-next-line react/require-default-props\n  productName?: string | null;\n};\n\nexport const PagePath: FC<Props> = ({ url, title, productName }) => {\n  return (\n    <div className=\"products__page__path path\">\n      <Link to=\"/\" className=\"path__home-icon path__icon\" />\n      <div className=\"path-block-container\">\n        <div className=\"path__arrow-right-icon path__icon\" />\n        <Link className=\"path__path-name\" to={url}>\n          {title}\n        </Link>\n      </div>\n\n      {productName && (\n        <div className=\"path-block-container\">\n          <div className=\"path__arrow-right-icon path__icon\" />\n          <p className=\"path__path-name\">\n            {productName}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null;\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(currentParams.toString());\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\n\nimport './Dropdown.scss';\n\ntype Props = {\n  title: string;\n  selectedValue: string;\n  options: string[][];\n  onSelect: (value: string) => void;\n  defaultOption: string;\n};\n\nexport const DropdownSelect: FC<Props> = ({\n  title,\n  selectedValue,\n  options,\n  onSelect,\n  defaultOption,\n}) => {\n  const handleCurrentValue = () => {\n    const optionValue = options.find(\n      ([, value]) => value === selectedValue,\n    ) || [];\n\n    if (!optionValue.length) {\n      return defaultOption;\n    }\n\n    const [key, value] = optionValue;\n\n    return (Number.isNaN(+value) ? key : value);\n  };\n\n  const [isShown, setIsShown] = useState(false);\n\n  const handleClick = (value: string) => {\n    onSelect(value);\n\n    setIsShown(prevState => !prevState);\n  };\n\n  const handleBlur = () => {\n    if (isShown) {\n      setTimeout(() => {\n        setIsShown(false);\n      }, 200);\n    }\n  };\n\n  useEffect(() => {\n    handleCurrentValue();\n  }, [selectedValue]);\n\n  return (\n    <div\n      className=\"selectors__dropdown selector\"\n    >\n      <p\n        className=\"selector__selector-label selectors__label\"\n      >\n        {title}\n      </p>\n\n      <button\n        type=\"button\"\n        className={classNames(\n          'selector__container',\n          'selector__selector-container',\n          { opened: isShown },\n        )}\n        tabIndex={0}\n        onClick={() => setIsShown(prevState => !prevState)}\n        onBlur={handleBlur}\n      >\n        {handleCurrentValue()}\n      </button>\n\n      <ul\n        className={classNames(\n          'selector__container',\n          'selector__options-container',\n          { show: isShown },\n        )}\n      >\n        {options.map(([key, value]) => (\n          <li\n            key={key}\n          >\n            <button\n              type=\"button\"\n              className=\"selector__container selector__option\"\n              onClick={() => {\n                handleClick(value);\n              }}\n            >\n              {Number.isNaN(+value) ? key : value}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SortBy } from '../../helpers/enums';\nimport { getSearchWith } from '../../helpers/searchHelpers';\nimport { DropdownSelect } from '../Dropdown/Dropdown';\n\nexport const SortBySelect: FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sort = searchParams.get('sort') || '';\n\n  const isSortBy = (value: string) => {\n    return Object.values<string>(SortBy).includes(value);\n  };\n\n  const handleSortBy = (value: string) => {\n    if (isSortBy(value)) {\n      const paramsToUpdate = { sort: !value ? null : value };\n\n      setSearchParams(getSearchWith(searchParams, paramsToUpdate));\n    }\n  };\n\n  return (\n    <DropdownSelect\n      title=\"Sort by\"\n      selectedValue={sort}\n      options={Object.entries(SortBy)}\n      onSelect={handleSortBy}\n      defaultOption=\"Newest\"\n    />\n  );\n};\n","import { useMemo } from 'react';\n\nexport const DOTS = '...';\n\nconst range = (start: number, end: number) => {\n  const length = end - start + 1;\n\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\ntype Props = {\n  totalCount: number,\n  pageSize: number,\n  currentPage: number,\n  siblingCount?: number,\n};\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  currentPage,\n  siblingCount = 1,\n}: Props) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    const totalPageNumbers = siblingCount + 5;\n\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount,\n    );\n\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = 3 + 2 * siblingCount;\n      const leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = 3 + 2 * siblingCount;\n      const rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount,\n      );\n\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      const middleRange = range(leftSiblingIndex, rightSiblingIndex);\n\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n\n    return [];\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n","import { FC } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { CatalogProduct } from '../../types/CatalogProduct';\nimport { handleLoadMore, handleSort } from '../../helpers/pagesMethods';\nimport { usePagination } from '../../helpers/usePagination';\n\ntype Props = {\n  productsList: CatalogProduct[];\n  currentProductsList: CatalogProduct[];\n  setCurrentProductsList: React.Dispatch<React\n    .SetStateAction<CatalogProduct[]>>;\n  total: number;\n};\n\nexport const LoadMore: FC<Props> = ({\n  productsList,\n  currentProductsList,\n  setCurrentProductsList,\n  total,\n}) => {\n  const [searchParams] = useSearchParams();\n  const page = searchParams.get('page') || '1';\n  const previousPage = searchParams.get('previousPage') || '8';\n  const sort = searchParams.get('sort') || '';\n  const sortedProducts = handleSort(productsList, sort);\n\n  const paginationRange = usePagination({\n    totalCount: total,\n    pageSize: +previousPage,\n    currentPage: +page,\n  });\n\n  const lastPage = paginationRange[paginationRange.length - 1];\n\n  const handleClick = () => {\n    handleLoadMore(\n      sortedProducts,\n      previousPage,\n      currentProductsList,\n      setCurrentProductsList,\n    );\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        'load-more-button',\n        { 'load-more-button--hide': +page === +lastPage },\n      )}\n      onClick={handleClick}\n    >\n      Load more\n    </button>\n  );\n};\n","import { FC, useState } from 'react';\nimport { CatalogProduct } from '../../types/CatalogProduct';\nimport { ProductItem } from '../ProductItem/ProductItem';\n\nimport './ProductsList.scss';\n\ntype Props = {\n  products: CatalogProduct[];\n  isSlider: boolean;\n};\n\nexport const ProductsList: FC<Props> = ({ products, isSlider }) => {\n  const [isProductsList] = useState(true);\n\n  return (\n    <div className=\"products-page__producs products-list\">\n      {products.map(product => (\n        <ProductItem\n          product={product}\n          key={product.itemId}\n          isSlider={isSlider}\n          isProductsList={isProductsList}\n        />\n      ))}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { usePagination, DOTS } from '../../helpers/usePagination';\n\nimport './PaginationBlock.scss';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const PaginationBlock: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const paginationRange = usePagination({\n    totalCount: total,\n    pageSize: perPage,\n    currentPage,\n  });\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null;\n  }\n\n  const handlePageClick = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    const { id } = event.currentTarget;\n\n    if (+id === currentPage) {\n      return;\n    }\n\n    onPageChange(+id);\n  };\n\n  const handlePrevClick = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  const handleNextClick = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const lastPage = paginationRange[paginationRange.length - 1];\n\n  return (\n    <ul\n      className=\"products-page__pagination pagination\"\n      data-cy=\"pagination\"\n    >\n      <li className=\"pagination__button-prev pagination__button--mobile\">\n        <button\n          data-cy=\"paginationLeft\"\n          type=\"button\"\n          className=\"\n            pagination-button\n            pagination-button--prev\n            pagination__button\n          \"\n          aria-label=\"buttonPrev\"\n          disabled={currentPage === 1}\n          onClick={handlePrevClick}\n        />\n      </li>\n\n      {paginationRange.map(pageNumber => {\n        if (pageNumber === DOTS) {\n          return (\n            <li\n              className=\"pagination__item dots\"\n              key={`${Math.random()}`}\n            >\n              &#8230;\n            </li>\n          );\n        }\n\n        return (\n          (\n            <li\n              className=\"pagination__item\"\n              key={pageNumber}\n            >\n              <button\n                className={classNames(\n                  'pagination__page',\n                  { 'selected-page': pageNumber === currentPage },\n                )}\n                type=\"button\"\n                aria-label=\"buttonPage\"\n                id={`${pageNumber}`}\n                onClick={handlePageClick}\n              >\n                {pageNumber}\n              </button>\n            </li>\n          )\n        );\n      })}\n\n      <li className=\"pagination__button-next pagination__button--mobile\">\n        <button\n          data-cy=\"paginationRight\"\n          type=\"button\"\n          className=\"\n            pagination-button\n            pagination__button\n          \"\n          aria-label=\"buttonNext\"\n          disabled={currentPage === lastPage}\n          onClick={handleNextClick}\n        />\n      </li>\n    </ul>\n  );\n};\n","import { FC } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PaginationBlock } from '../PaginationBlock/PaginationBlock';\nimport { getSearchWith } from '../../helpers/searchHelpers';\n\ntype Props = {\n  total: number;\n};\n\nexport const PaginationPage: FC<Props> = ({ total }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page') || '1';\n  const previousPage = searchParams.get('previousPage') || '8';\n\n  const handlePageSelect = (pageNumber: number) => {\n    const paramsToUpdate = { page: !pageNumber ? null : `${pageNumber}` };\n\n    setSearchParams(getSearchWith(searchParams, paramsToUpdate));\n  };\n\n  return (\n    <PaginationBlock\n      total={total}\n      perPage={+previousPage}\n      currentPage={+page}\n      onPageChange={handlePageSelect}\n    />\n  );\n};\n","import { FC } from 'react';\n\nexport const NoSearchResult: FC = () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n\n  return (\n    <div className=\"no-result\">\n      <h2 className=\"no-results__message\">\n        There are no products matching the query &#x1F50D;\n      </h2>\n\n      <div className=\"no-results__image-container\">\n        <img\n          src=\"/_new/img/No_search_results.jpg\"\n          alt=\"No results\"\n          className=\"no-results__image\"\n        />\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PreviousPage } from '../../helpers/enums';\nimport { DropdownSelect } from '../Dropdown/Dropdown';\nimport { getSearchWith } from '../../helpers/searchHelpers';\n\nexport const ItemsOnPageSelect: FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const perPage = searchParams.get('perPage') || '8';\n\n  const handleItemsPerPage = (value: string) => {\n    const paramsToUpdate = {\n      perPage: !value ? null : value,\n      page: '1',\n    };\n\n    setSearchParams(getSearchWith(searchParams, paramsToUpdate));\n  };\n\n  return (\n    <DropdownSelect\n      title=\"Items on page\"\n      selectedValue={perPage}\n      defaultOption=\"8\"\n      options={Object.entries(PreviousPage)}\n      onSelect={handleItemsPerPage}\n    />\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport { CatalogProduct } from '../../types/CatalogProduct';\nimport { Loader } from '../../components/Loader';\nimport {\n  getCurrentProductList,\n} from '../../helpers/pagesMethods';\nimport { getProducts } from '../../utils/fetchData';\nimport { PagePath } from '../../components/PagePath/PagePath';\nimport { SortBySelect } from '../../components/SortBySelect/SortBySelect';\nimport { LoadMore } from '../../components/LoadMore/LoadMore';\nimport { ProductsList } from '../../components/ProductsList/ProductsList';\nimport { PaginationPage } from '../../components/PaginationPage/PaginationPage';\nimport { NoSearchResult } from '../../components/NoSearchResult/NoSearchResult';\nimport {\n  ItemsOnPageSelect,\n} from '../../components/ItemsOnPageSelect/ItemsOnPageSelect';\n\nimport './PhonesPage.scss';\n\nexport const PhonesPage: FC = () => {\n  const [phonesList, setPhonesList] = useState<CatalogProduct[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [paginationTotal, setPaginationTotal] = useState(0);\n\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const sort = searchParams.get('sort') || '';\n  const page = searchParams.get('page') || '1';\n  const previousPage = searchParams.get('perPage') || '8';\n  const query = searchParams.get('query') || '';\n\n  const [currentPhonesList, setCurrentPhonesList]\n    = useState<CatalogProduct[]>([]);\n\n  const navigate = useNavigate();\n\n  const handleLoading = async () => {\n    try {\n      setIsLoading(true);\n\n      const productsFromServer = await getProducts();\n\n      const phones = productsFromServer\n        .filter((product: CatalogProduct) => product.category === 'phones');\n\n      const currentList = getCurrentProductList(\n        phones,\n        sort,\n        query,\n        previousPage,\n        page,\n        setPaginationTotal,\n      );\n\n      setPhonesList(phones);\n      setCurrentPhonesList(currentList);\n      setIsInitialized(true);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      navigate('/notfound', { replace: true });\n    }\n  };\n\n  useEffect(() => {\n    if (!isInitialized) {\n      handleLoading();\n    }\n\n    if (isInitialized) {\n      setIsLoading(true);\n\n      const currentList = getCurrentProductList(\n        phonesList,\n        sort,\n        query,\n        previousPage,\n        page,\n        setPaginationTotal,\n      );\n\n      setCurrentPhonesList(currentList);\n\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 1000);\n    }\n  }, [location]);\n\n  return (\n    <div\n      className=\"\n        main__products-page\n        main__products-page--width\n        products-page\n      \"\n    >\n      <PagePath url=\"/phones\" title=\"Phones\" />\n\n      <h1 className=\"products-page__title page-title\">Mobile phones</h1>\n\n      {isInitialized && !!phonesList.length && (\n        <>\n          <p className=\"products-page__total-amount\">\n            {`${phonesList.length} models`}\n          </p>\n\n          <div className=\"products-page__selectors selectors\">\n            <SortBySelect />\n\n            <ItemsOnPageSelect />\n          </div>\n        </>\n      )}\n\n      {isLoading && <Loader />}\n\n      {!isLoading && !!currentPhonesList.length ? (\n        <>\n          <ProductsList\n            products={currentPhonesList}\n            isSlider={false}\n          />\n\n          {(currentPhonesList.length < phonesList.length) && (\n            <>\n              <LoadMore\n                productsList={phonesList}\n                currentProductsList={currentPhonesList}\n                setCurrentProductsList={setCurrentPhonesList}\n                total={paginationTotal}\n              />\n\n              <PaginationPage\n                total={paginationTotal}\n              />\n            </>\n          )}\n        </>\n      ) : (\n        !isLoading && (\n          <NoSearchResult />\n        )\n      )}\n    </div>\n  );\n};\n","import { FC } from 'react';\n\nimport './NoResuts.scss';\n\ntype Props = {\n  title: string;\n  imageUrl: string;\n};\n\nexport const NoResults: FC<Props> = ({ title, imageUrl }) => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n\n  return (\n    <div className=\"no-results\">\n      <h2 className=\"no-results__message\">\n        {title}\n      </h2>\n\n      <div className=\"no-results__image-container\">\n        <img\n          src={imageUrl}\n          alt=\"No results\"\n          className=\"no-results__image\"\n        />\n      </div>\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { CatalogProduct } from '../../types/CatalogProduct';\nimport { getProducts } from '../../utils/fetchData';\nimport { getCurrentProductList } from '../../helpers/pagesMethods';\nimport { PagePath } from '../../components/PagePath/PagePath';\nimport { SortBySelect } from '../../components/SortBySelect/SortBySelect';\nimport {\n  ItemsOnPageSelect,\n} from '../../components/ItemsOnPageSelect/ItemsOnPageSelect';\nimport { NoResults } from '../../components/NoResult/NoResult';\nimport { Loader } from '../../components/Loader';\nimport { ProductsList } from '../../components/ProductsList/ProductsList';\nimport { LoadMore } from '../../components/LoadMore/LoadMore';\nimport { PaginationPage } from '../../components/PaginationPage/PaginationPage';\n\nexport const TabletsPage: FC = () => {\n  const [tabletsList, setTabletsList] = useState<CatalogProduct[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [paginationTotal, setPaginationTotal] = useState(0);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const sort = searchParams.get('sort') || '';\n  const page = searchParams.get('page') || '1';\n  const previousPage = searchParams.get('perPage') || '8';\n  const query = searchParams.get('query') || '';\n\n  const navigate = useNavigate();\n\n  const [currentTabletsList, setCurrentTabletsList]\n    = useState<CatalogProduct[]>([]);\n\n  const handeLoading = async () => {\n    try {\n      setIsLoading(true);\n\n      const productsFromServer = await getProducts();\n\n      const tablets = productsFromServer\n        .filter((product: CatalogProduct) => product.category === 'tablet');\n\n      const currentList = getCurrentProductList(\n        tablets,\n        sort,\n        query,\n        previousPage,\n        page,\n        setPaginationTotal,\n      );\n\n      setTabletsList(tablets);\n      setCurrentTabletsList(currentList);\n      setIsInitialized(true);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      navigate('/notfound', { replace: true });\n    }\n  };\n\n  useEffect(() => {\n    if (!isInitialized) {\n      handeLoading();\n    }\n\n    if (isInitialized) {\n      setIsLoading(true);\n\n      const currentList = getCurrentProductList(\n        tabletsList,\n        sort,\n        query,\n        previousPage,\n        page,\n        setPaginationTotal,\n      );\n\n      setCurrentTabletsList(currentList);\n\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 1000);\n    }\n  }, [location]);\n\n  return (\n    <div className=\"\n      main__products-page\n      main__products-page--width\n      products-page\"\n    >\n      <PagePath url=\"/tablets\" title=\"Tablets\" />\n\n      <h1 className=\"products-page__title page-title\">Tablets</h1>\n\n      {isInitialized && !!tabletsList.length ? (\n        <>\n          <p className=\"products-page__total-amount\">\n            {`${tabletsList.length} models`}\n          </p>\n\n          <div className=\"products-page__selectors selectors\">\n            <SortBySelect />\n\n            <ItemsOnPageSelect />\n          </div>\n        </>\n      ) : (\n        !isLoading && (\n          <NoResults\n            imageUrl=\"img/noData.jpg\"\n            title=\"Sorry, the selected product is not available\"\n          />\n        )\n      )}\n\n      {isLoading && <Loader />}\n\n      {!isLoading && !!tabletsList.length && (\n        <>\n          <ProductsList\n            products={currentTabletsList}\n            isSlider={false}\n          />\n\n          {(currentTabletsList.length < tabletsList.length) && (\n            <>\n              <LoadMore\n                productsList={tabletsList}\n                currentProductsList={currentTabletsList}\n                setCurrentProductsList={setCurrentTabletsList}\n                total={paginationTotal}\n              />\n\n              <PaginationPage\n                total={paginationTotal}\n              />\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { CatalogProduct } from '../../types/CatalogProduct';\nimport { getProducts } from '../../utils/fetchData';\nimport { getCurrentProductList } from '../../helpers/pagesMethods';\nimport { PagePath } from '../../components/PagePath/PagePath';\nimport { SortBySelect } from '../../components/SortBySelect/SortBySelect';\nimport {\n  ItemsOnPageSelect,\n} from '../../components/ItemsOnPageSelect/ItemsOnPageSelect';\nimport { NoResults } from '../../components/NoResult/NoResult';\nimport { Loader } from '../../components/Loader';\nimport { ProductsList } from '../../components/ProductsList/ProductsList';\nimport { LoadMore } from '../../components/LoadMore/LoadMore';\nimport { PaginationPage } from '../../components/PaginationPage/PaginationPage';\n\nexport const AccessoriesPage: FC = () => {\n  const [accessoriesList, setAccessoriesList] = useState<CatalogProduct[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [paginationTotal, setPaginationTotal] = useState(0);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const sort = searchParams.get('sort') || '';\n  const page = searchParams.get('page') || '1';\n  const previousPage = searchParams.get('perPage') || '8';\n  const query = searchParams.get('query') || '';\n\n  const navigate = useNavigate();\n\n  const [currentTabletsList, setCurrentTabletsList]\n    = useState<CatalogProduct[]>([]);\n\n  const handeLoading = async () => {\n    try {\n      setIsLoading(true);\n\n      const productsFromServer = await getProducts();\n\n      const tablets = productsFromServer\n        .filter((product: CatalogProduct) => product\n          .category === 'accessories');\n\n      const currentList = getCurrentProductList(\n        tablets,\n        sort,\n        query,\n        previousPage,\n        page,\n        setPaginationTotal,\n      );\n\n      setAccessoriesList(tablets);\n      setCurrentTabletsList(currentList);\n      setIsInitialized(true);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      navigate('/notfound', { replace: true });\n    }\n  };\n\n  useEffect(() => {\n    if (!isInitialized) {\n      handeLoading();\n    }\n\n    if (isInitialized) {\n      setIsLoading(true);\n\n      const currentList = getCurrentProductList(\n        accessoriesList,\n        sort,\n        query,\n        previousPage,\n        page,\n        setPaginationTotal,\n      );\n\n      setCurrentTabletsList(currentList);\n\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 1000);\n    }\n  }, [location]);\n\n  return (\n    <div className=\"\n      main__products-page\n      main__products-page--width\n      products-page\"\n    >\n      <PagePath url=\"/tablets\" title=\"Tablets\" />\n\n      <h1 className=\"products-page__title page-title\">Tablets</h1>\n\n      {isInitialized && !!accessoriesList.length ? (\n        <>\n          <p className=\"products-page__total-amount\">\n            {`${accessoriesList.length} models`}\n          </p>\n\n          <div className=\"products-page__selectors selectors\">\n            <SortBySelect />\n\n            <ItemsOnPageSelect />\n          </div>\n        </>\n      ) : (\n        !isLoading && (\n          <NoResults\n            imageUrl=\"img/noData.jpg\"\n            title=\"Sorry, the selected product is not available\"\n          />\n        )\n      )}\n\n      {isLoading && <Loader />}\n\n      {!isLoading && !!accessoriesList.length && (\n        <>\n          <ProductsList\n            products={currentTabletsList}\n            isSlider={false}\n          />\n\n          {(currentTabletsList.length < accessoriesList.length) && (\n            <>\n              <LoadMore\n                productsList={accessoriesList}\n                currentProductsList={currentTabletsList}\n                setCurrentProductsList={setCurrentTabletsList}\n                total={paginationTotal}\n              />\n\n              <PaginationPage\n                total={paginationTotal}\n              />\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { CardButtons } from '../CardButtons/CardButtons';\nimport {\n  getLinkToProduct,\n  getMemoryCapacity,\n} from '../../helpers/pagesMethods';\n\nimport './ProductDetailsInfo.scss';\nimport './Color.scss';\nimport './Capacity.scss';\nimport './Price.scss';\nimport './Specs.scss';\n\ntype Props = {\n  id: string;\n  colors: string[];\n  currentColor: string;\n  priceDiscount: number;\n  priceRegular: number;\n  screen: string;\n  resolution: string;\n  processor: string;\n  ram: string;\n  capacities: string[];\n  currentCapacity: string;\n  category: string;\n  nameId: string;\n  images: string[];\n  name: string;\n};\n\nexport const ProductDetailsInfo: FC<Props> = ({\n  id,\n  colors,\n  currentColor,\n  priceDiscount,\n  priceRegular,\n  screen,\n  resolution,\n  processor,\n  ram,\n  capacities,\n  currentCapacity,\n  category,\n  nameId,\n  images,\n  name,\n}) => {\n  const getColor = (color: string) => {\n    switch (color) {\n      case 'midnightgreen':\n        return '#28372A';\n\n      case 'rosegold':\n        return '#F6D3D3';\n\n      case 'spacegray':\n        return '#717378';\n\n      case 'gold':\n        return '#F9E5C9';\n\n      case 'green':\n        return '#AEE1CD';\n\n      case 'yellow':\n        return '#FFE681';\n\n      case 'purple':\n        return '#D1CDDA';\n\n      case 'red':\n        return '#BA0C2E';\n\n      default:\n        return `${color}`;\n    }\n  };\n\n  return (\n    <div className=\"product-data\">\n      <div className=\"product-data__available-colors colors\">\n        <p className=\"colors__colors-title info-block-title\">\n          Available colors\n        </p>\n\n        <div className=\"colors__colors-icons\">\n          {colors.map(color => (\n            <Link\n              key={color}\n              to={getLinkToProduct(category, nameId, currentCapacity, color)}\n              className={classNames(\n                'colors-icon-container',\n                { 'color-active': color === currentColor },\n              )}\n            >\n              <div className=\"colors__colors-icon\" style={{ backgroundColor: `${getColor(color)}` }} />\n            </Link>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"product-data__available-capacity capacity\">\n        <p className=\"capacity__capacity-title info-block-title\">\n          Select capacity\n        </p>\n\n        <div className=\"capacity__capacity-icons\">\n          {capacities.map(capacity => (\n            <Link\n              to={getLinkToProduct(category, nameId, capacity, currentColor)}\n              key={capacity}\n              className={classNames(\n                'capacity__capacity-icon',\n                { 'capacity-active': capacity === currentCapacity },\n              )}\n            >\n              {getMemoryCapacity(capacity)}\n            </Link>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"product-data__price prices\">\n        <div className=\"prices__price--with-discount\">\n          {`$${priceDiscount}`}\n        </div>\n\n        <div className=\"prices__price--full\">\n          {`$${priceRegular}`}\n        </div>\n      </div>\n\n      <div className=\"product-data__buttons\">\n        <CardButtons\n          id={id}\n          product={category}\n          name={name}\n          price={priceDiscount}\n          imageUrl={images[0]}\n          fullPrice={priceRegular}\n          screen={screen}\n          capacity={currentCapacity}\n          ram={ram}\n        />\n      </div>\n\n      <div className=\"product-data__info-specs specs\">\n        <div className=\"specs__info-spec\">\n          <p className=\"specs__info-title\">\n            Screen\n          </p>\n\n          <div className=\"specs__info-value\">\n            {screen}\n          </div>\n        </div>\n\n        <div className=\"specs__info-spec\">\n          <p className=\"specs__info-title\">\n            Resolution\n          </p>\n\n          <div className=\"specs__info-value\">\n            {resolution}\n          </div>\n        </div>\n\n        <div className=\"specs__info-spec\">\n          <p className=\"specs__info-title\">\n            Processor\n          </p>\n\n          <div className=\"specs__info-value\">\n            {processor}\n          </div>\n        </div>\n\n        <div className=\"specs__info-spec\">\n          <p className=\"specs__info-title\">\n            RAM\n          </p>\n\n          <div className=\"specs__info-value\">\n            {getMemoryCapacity(ram)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { FC, useState } from 'react';\n\nimport './ProductImagesSlider.scss';\n\ntype Props = {\n  images: string[];\n};\n\nexport const ProductImagesSlider: FC<Props> = ({ images }) => {\n  const [isSelected, setIsSelected] = useState(images[0]);\n\n  return (\n    <div className=\"slider\">\n      <div className=\"slider__col\">\n        {images.map((image) => (\n          <button\n            key={image}\n            aria-label=\"image\"\n            type=\"button\"\n            className={classNames('slider__button', {\n              'slider__button--active': isSelected === image,\n            })}\n            style={{ backgroundImage: `url(_new/${image})` }}\n            onClick={() => setIsSelected(image)}\n          />\n        ))}\n      </div>\n      <img className=\"slider__main\" src={`_new/${isSelected}`} alt=\"main\" />\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { ProductDetails } from '../../types/ProductDetails';\nimport { getProductDetails } from '../../utils/fetchData';\nimport { getSuggestProducts } from '../../helpers/pagesMethods';\nimport { CatalogProduct } from '../../types/CatalogProduct';\nimport { Loader } from '../../components/Loader';\nimport { ProductsSlider } from '../../components/ProductSlider/ProductSlider';\nimport { MobileSwiper } from '../../components/MobileSwiper/MobileSwiper';\nimport { PagePath } from '../../components/PagePath/PagePath';\nimport {\n  ProductDetailsInfo,\n} from '../../components/ProductDetailsInfo/ProductDetailsInfo';\nimport {\n  ProductImagesSlider,\n} from '../../components/ProductImagesSlider/ProductImagesSlider';\n\nimport './ItemCardPage.scss';\n\nexport const ItemCardPage: FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [suggestItems, setSuggestItems] = useState<CatalogProduct[]>([]);\n  const [currentProduct, setCurrentProduct]\n    = useState<ProductDetails | null>(null);\n\n  const { productId = '' } = useParams();\n  const location = useLocation();\n\n  const path = location.pathname;\n  const category = path.slice(1, path.indexOf(productId) - 1);\n\n  const handleLoading = async () => {\n    try {\n      setIsLoading(true);\n\n      const product = await getProductDetails(productId);\n\n      setCurrentProduct(product);\n\n      const suggest = await getSuggestProducts(\n        product.screen,\n        product.capacity,\n        productId,\n      );\n\n      setIsInitialized(true);\n      setIsLoading(false);\n      setSuggestItems(suggest);\n    } catch (error) {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    handleLoading();\n  }, [productId]);\n\n  return (\n    <div className=\"\n      main__products-page\n      main__products-page--width\n      products-page\"\n    >\n      {isLoading && !isError && <Loader />}\n\n      {isError && (\n        <>\n          <h1\n            className=\"\n              products-page__title\n              page-title\n              products-page__title--product\n              products-page__title--not-found\"\n          >\n            Phone was not found\n          </h1>\n\n          <div\n            className=\"\n              no-results__image-container\n              no-results__wasnt-found\"\n          >\n            <img\n              src=\"img/isError.jpg\"\n              alt=\"Wasn't found\"\n              className=\"no-results__image\"\n            />\n          </div>\n        </>\n      )}\n\n      {isInitialized && !isLoading && !isError && currentProduct && (\n        <>\n          <PagePath\n            url={`/${category}`}\n            title={category}\n            productName={currentProduct.name}\n          />\n\n          <h1\n            className=\"\n            products-page__title\n            page-title\n            products-page__title--product\n          \"\n          >\n            {currentProduct.name}\n          </h1>\n\n          <div className=\"product-details product-details__container\">\n            <div className=\"product-details__options\">\n              <div\n                className=\"interactive-gallery\"\n              >\n                <ProductImagesSlider images={currentProduct.images} />\n              </div>\n\n              <div className=\"product-details__info-block\">\n                <ProductDetailsInfo\n                  id={currentProduct.id}\n                  colors={currentProduct.colorsAvailable}\n                  currentColor={currentProduct.color}\n                  priceDiscount={currentProduct.priceDiscount}\n                  priceRegular={currentProduct.priceRegular}\n                  screen={currentProduct.screen}\n                  resolution={currentProduct.resolution}\n                  processor={currentProduct.processor}\n                  ram={currentProduct.ram}\n                  capacities={currentProduct.capacityAvailable}\n                  currentCapacity={currentProduct.capacity}\n                  category={category}\n                  nameId={currentProduct.namespaceId}\n                  images={currentProduct.images}\n                  name={currentProduct.name}\n                />\n              </div>\n\n              <div className=\"product-details__id\">\n                {`ID: ${currentProduct.namespaceId}`}\n              </div>\n            </div>\n\n            <div className=\"product-details__description\">\n              <div className=\"product-details__about about\">\n                <h2 className=\"about__description-title description-title\">\n                  About\n                </h2>\n\n                <div className=\"about__description-text\">\n                  {currentProduct.description.map(section => (\n                    <div className=\"about__container\" key={section.title}>\n                      <p className=\"about__section-title\">\n                        {section.title}\n                      </p>\n\n                      <p className=\"about__section-text\">\n                        {section.text}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"product-details__tech-specs tech-specs\">\n                <h2\n                  className=\"\n                  tech-specs__description-title\n                  description-title\n                \"\n                >\n                  Tech specs\n                </h2>\n\n                <div className=\"tech-specs__description-specs specs\">\n                  <div className=\"specs__info-spec\">\n                    <p className=\"specs__info-title\">\n                      Screen\n                    </p>\n\n                    <div className=\"specs__info-value\">\n                      {currentProduct.screen}\n                    </div>\n                  </div>\n\n                  <div className=\"specs__info-spec\">\n                    <p className=\"specs__info-title\">\n                      Resolution\n                    </p>\n\n                    <div className=\"specs__info-value\">\n                      {currentProduct.resolution}\n                    </div>\n                  </div>\n\n                  <div className=\"specs__info-spec\">\n                    <p className=\"specs__info-title\">\n                      Processor\n                    </p>\n\n                    <div className=\"specs__info-value\">\n                      {currentProduct.processor}\n                    </div>\n                  </div>\n\n                  <div className=\"specs__info-spec\">\n                    <p className=\"specs__info-title\">\n                      RAM\n                    </p>\n\n                    <div className=\"specs__info-value\">\n                      {currentProduct.ram}\n                    </div>\n                  </div>\n\n                  <div className=\"specs__info-spec\">\n                    <p className=\"specs__info-title\">\n                      Built in memory\n                    </p>\n\n                    <div className=\"specs__info-value\">\n                      {currentProduct.capacity}\n                    </div>\n                  </div>\n\n                  <div className=\"specs__info-spec\">\n                    <p className=\"specs__info-title\">\n                      Camera\n                    </p>\n\n                    <div className=\"specs__info-value\">\n                      {currentProduct.camera}\n                    </div>\n                  </div>\n\n                  <div className=\"specs__info-spec\">\n                    <p className=\"specs__info-title\">\n                      Zoom\n                    </p>\n\n                    <div className=\"specs__info-value\">\n                      {currentProduct.zoom}\n                    </div>\n                  </div>\n\n                  <div className=\"specs__info-spec\">\n                    <p className=\"specs__info-title\">\n                      Cell\n                    </p>\n\n                    <div className=\"specs__info-value\">\n                      {currentProduct.cell.join(', ')}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <ProductsSlider\n            title=\"You may also like\"\n            products={suggestItems}\n          />\n\n          <MobileSwiper\n            title=\"You may also like\"\n            products={suggestItems}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport { App } from './App';\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PhonesPage } from './pages/PhonesPage/PhonesPage';\nimport { TabletsPage } from './pages/TabletsPage/TabletsPage';\nimport { AccessoriesPage } from './pages/AccessoriesPage/AccessoriesPage';\nimport { ItemCardPage } from './pages/ItemCardPage/ItemCardPage';\n\nReactDOM.render(\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"phones\">\n          <Route index element={<PhonesPage />} />\n          <Route path=\":productId\" element={<ItemCardPage />} />\n        </Route>\n\n        <Route path=\"tablets\" element={<TabletsPage />} />\n\n        <Route path=\"accessories\" element={<AccessoriesPage />} />\n      </Route>\n\n      <Route path=\"notfound\" element={<NotFoundPage />} />\n      <Route path=\"*\" element={<Navigate to=\"notfound\" replace />} />\n    </Routes>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}